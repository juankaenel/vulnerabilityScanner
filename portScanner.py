#!/usr/bin/python3
import socket, sys
from IPy import IP
from colorama import Fore

print(Fore.YELLOW + "\n~ Bienvenido al escáner de vulnerabilidades ~") 
print(Fore.YELLOW + "\nCreated By:") 
print(Fore.WHITE + " ____  _  _       ___")       
print(Fore.WHITE + "|  _ \| || | ____/ _ \ _ __") 
print(Fore.WHITE + "| |_) | || ||_  / | | | '__|")
print(Fore.WHITE + "|  _ <|__   _/ /| |_| | |   ")
print(Fore.WHITE + "|_| \_\  |_|/___|\___/|_|   ")

print(Fore.YELLOW + "\nWeb Page: https://juankaenel.com \n")
print(Fore.YELLOW + "[Info] Herramienta desarrollada en python para escanear banners vulnerables en puertos abiertos \n")
print(Fore.YELLOW + "----------------------------------------------------------------------------------\n")            


class PortScan():
    banners = []
    open_ports = []
    
    def __init__(self,target,port_num):
        self.target = target
        self.port_num = port_num
        
    
    def scan(self):
        for port in range(1,500):
            self.scan_port(port)
        
    def check_ip(self):
        try:
            IP(self.target)
            return(self.target)
        except ValueError:
            return socket.gethostbyname(self.target)


    def scan_port(self,port):
        try:
            converted_ip = self.check_ip()
            sock = socket.socket() # descriptor socket+
            sock.settimeout(0.5) # cada 0.5 seg intenta la conexión
            sock.connect((converted_ip,port)) # conexión
            self.open_ports.append(port)
            try:
                banner = sock.recv(1024).decode().strip('\n').strip('\r')
                self.banners.append(banner)
            except:
                self.banners.append(' ')
            sock.close()
        except:
            pass
 